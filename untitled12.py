# -*- coding: utf-8 -*-
"""Untitled12.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ac6kPe_0loGJFim7GpKYNtjXijs5WVlz
"""

import numpy as np
import matplotlib.pyplot as plt
x = np.linspace(0, 2 * np.pi, 500)
y = np.sin(x)
plt.figure(figsize=(8, 5))
plt.plot(x, y, label='sin(x)', color='blue', linewidth=2)
plt.title("Sinus Funktsiyasi Grafikasi", fontsize=16)
plt.xlabel("X qiymatlari (radianlarda)", fontsize=12)
plt.ylabel("sin(x) qiymatlari", fontsize=12)
plt.grid(color='gray', linestyle='--', linewidth=0.5)
plt.axhline(0, color='black', linewidth=0.8, linestyle='--')
plt.axvline(0, color='black', linewidth=0.8, linestyle='--')
plt.legend(fontsize=12)
plt.show()

import numpy as np
import matplotlib.pyplot as plt
np.random.seed(42)
x = np.random.rand(100)
y = np.random.rand(100)
colors = np.random.rand(100)
sizes = np.random.rand(100)
plt.figure(figsize=(8, 6))
scatter = plt.scatter(x, y, c=colors, s=sizes, alpha=0.7, cmap='viridis')
plt.title("Tasodifiy Nuqtalar Scatter Grafikasi", fontsize=16)
plt.xlabel("X qiymatlari", fontsize=12)
plt.ylabel("Y qiymatlari", fontsize=12)
plt.colorbar(scatter, label="Nuqtalar rangi")
plt.grid(color='gray', linestyle='--', linewidth=0.5)
plt.show()

import pandas as pd


data = {
    "Mamlakat": ["AQSh", "Hindiston", "Braziliya", "Rossiya", "Fransiya"],
    "Kasallar soni": [50000000, 35000000, 22000000, 19000000, 12000000],
    "Vafot etganlar": [800000, 500000, 600000, 400000, 200000],
    "Sog'ayganlar": [45000000, 32000000, 20000000, 17000000, 10000000]
}


df = pd.DataFrame(data)


def analyze_covid_data(df):
    print("1. COVID-19 bo'yicha jadval ma'lumotlari:")
    print(df, "\n")

    print("2. Umumiy kasallar soni:")
    print(df["Kasallar soni"].sum(), "\n")

    print("3. Umumiy vafot etganlar soni:")
    print(df["Vafot etganlar"].sum(), "\n")

    print("4. Umumiy sog'ayganlar soni:")
    print(df["Sog'ayganlar"].sum(), "\n")

    print("5. O'lim foizi (%):")
    df["O'lim foizi (%)"] = (df["Vafot etganlar"] / df["Kasallar soni"]) * 100
    print(df[["Mamlakat", "O'lim foizi (%)"]], "\n")

    print("6. Eng ko'p vafot etganlar qaysi mamlakatda:")
    max_deaths = df[df["Vafot etganlar"] == df["Vafot etganlar"].max()]
    print(max_deaths[["Mamlakat", "Vafot etganlar"]], "\n")

    print("7. Eng yuqori o'lim foizi qaysi mamlakatda:")
    max_death_rate = df[df["O'lim foizi (%)"] == df["O'lim foizi (%)"].max()]
    print(max_death_rate[["Mamlakat", "O'lim foizi (%)"]], "\n")


analyze_covid_data(df)

from google.colab.patches import cv2_imshow
import cv2
rasm1=cv2.imread("2-rasm.webp")
cv2_imshow(rasm1)

from google.colab.patches import cv2_imshow
import cv2
rasm2=cv2.imread("3-rasm.webp")
cv2_imshow(rasm2)

from google.colab.patches import cv2_imshow
import cv2
rasm3=cv2.imread("4-rasm.webp")
cv2_imshow(rasm3)

oqqora1=cv2.cvtColor(rasm1,cv2.COLOR_BGR2GRAY)
cv2_imshow(oqqora1)

oqqora2=cv2.cvtColor(rasm2,cv2.COLOR_BGR2GRAY)
cv2_imshow(oqqora2)

oqqora3=cv2.cvtColor(rasm3,cv2.COLOR_BGR2GRAY)
cv2_imshow(oqqora3)

import numpy as np
import matplotlib.pyplot as plt
from scipy.io import wavfile

def generate_spectrogram(wav_file):
    # Read the WAV file
    sample_rate, data = wavfile.read(wav_file)

    # Check if data is stereo or mono
    if len(data.shape) > 1:
        data = data[:, 0]  # Use one channel if stereo

    # Create a spectrogram
    plt.figure(figsize=(12, 6))
    plt.specgram(data, Fs=sample_rate, NFFT=1024, noverlap=512, cmap='inferno')

    plt.title(f'Spectrogram of {wav_file}')
    plt.xlabel('Time (s)')
    plt.ylabel('Frequency (Hz)')
    plt.colorbar(label='Intensity (dB)')
    plt.xlim(0, len(data) / sample_rate)  # Set x-axis limit
    plt.ylim(0, sample_rate / 2)           # Frequency range from 0 to Nyquist frequency
    plt.grid(True)
    plt.show()

# Example usage
wav_file_path = 'music.wav'  # Replace with your WAV file path
generate_spectrogram(wav_file_path)